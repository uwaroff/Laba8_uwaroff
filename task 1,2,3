import cv2
from PIL import Image
import numpy as np

img = cv2.imread('variant-10.jpg')
ret, thresh = cv2.threshold(img, 150, 255, 0)
cv2.imshow('Thresh', thresh)
cv2.waitKey(500)
cv2.destroyAllWindows()



flip = False
center_rect_size = 150
cap = cv2.VideoCapture(1)
speedo = Image.open('fly64.png').convert('RGBA')
template = cv2.imread('ref-point.jpg', 0)
w, h = template.shape[::-1]
while True:
    ret, frame = cap.read()
    if not ret:
        break
    frame_gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)
    res = cv2.matchTemplate(frame_gray, template, cv2.TM_SQDIFF_NORMED)
    min_val, max_val, min_loc, max_loc = cv2.minMaxLoc(res)
    top_left = min_loc
    bottom_right = (top_left[0] + w, top_left[1] + h)
    cv2.rectangle(frame, top_left, bottom_right, (0, 0, 255), 2)

    frame_height, frame_width = frame.shape[:2]
    center_x = frame_width // 2
    center_y = frame_height // 2
    center_rect = (
        center_x - center_rect_size // 2,
        center_y - center_rect_size // 2,
    )

    cv2.rectangle(frame, (center_rect[0], center_rect[1]),
                  (center_rect[0] + center_rect_size, center_rect[1] + center_rect_size), (0, 255, 255), 2)

    label_center_x = top_left[0] + w // 2
    label_center_y = top_left[1] + h // 2

    if (
            center_rect[0] <= label_center_x <= center_rect[0] + center_rect_size
            and center_rect[1] <= label_center_y <= center_rect[1] + center_rect_size
    ):
        frame = cv2.flip(frame, -1)

    cv2.imshow('frame', frame)
    if cv2.waitKey(1) == ord('q'):
        break

cap.release()
cv2.destroyAllWindows()
